{
  "GET /api": { "description": "responds with a description of all endpoints" },
  "GET /api/users/:user_id/calendar/:date": {
    "description": "responds with an object containing meal info for that date to that user",
    "notes": ":date parameter is of the form 4-3-2002 for example. No leading zeros and is of the for date-month-year. Months are indexed at 0!! (applies for post and patch)",
    "exampleResponse": {
      "meals": {
        "breakfast": {
          "recipie_id": "123DE4",
          "recipie_name": "beans on toast",
          "my_recipie": false
        },
        "dinner": {
          "recipie_id": "12SHE4",
          "recipie_name": "Paneer Curry",
          "my_recipie": true
        }
      }
    }
  },
  "POST /api/users/:user_id/calendar/:date": {
    "description": "posts meals info to a date if the meal already exists it will overwrite what is already there",
    "requestFormat": {
      "breakfast": {
        "recipie_id": "12SHE4",
        "recipie_name": "Paneer Curry",
        "my_recipie": true
      }
    },
    "notes": "can have breakfast lunch dinner and extras as keys, all keys are optional",
    "exampleResponse": {
      "meals": {
        "breakfast": {
          "recipie_id": "12SHE4",
          "recipie_name": "Paneer Curry",
          "my_recipie": true
        }
      }
    }
  },
  "PATCH /api/users/:user_id/calendar/:date": {
    "description": "patches meals info to an existing date if the date already exists (i.e has other meals as well) it will not overwrite what is already there",
    "requestFormat": {
      "breakfast": {
        "recipie_id": "12SHE4",
        "recipie_name": "Paneer Curry",
        "my_recipie": true
      }
    },
    "notes": "can have breakfast lunch dinner and extras as keys, all keys are optional",
    "exampleResponse": {
      "meals": {
        "breakfast": {
          "recipie_id": "12SHE4",
          "recipie_name": "Paneer Curry",
          "my_recipie": true
        }
      }
    }
  },
  "POST /api/users": {
    "description": "posts a user to the database with an empty lists favourites and recipies arrays",
    "requestFormat": {
      "email": "test-user@email.com",
      "user_id": "123",
      "display_name": "Maggie",
      "avatar_url": "https:image.com"
    },
    "exampleResponse": {
      "user": {
        "email": "test-user@email.com",
        "user_id": "123",
        "display_name": "Maggie",
        "avatar_url": "https:image.com",
        "recipies": [],
        "favourites": [],
        "lists": []
      }
    }
  },
  "GET /api/users": {
    "description": "returns all display_name, email, avatar_url, user_id for all users if searchTerm queries is included it will filter the users according to it",
    "queries": ["searchTerm"],
    "exampleResponse": {
      "users": [
        {
          "display_name": "Hanna",
          "user_id": "123",
          "email": "hanna@gmail.com",
          "avatar_url": "exampleUrL"
        }
      ]
    }
  },
  "POST /api/users/:user_id/calendar": {
    "description": "posts a user to the calendar database with no meals",
    "exampleResponse": { "user_id": "123GF" }
  },
  "DELETE /api/users/:user_id/calendar/:date/:meal": {
    "description": "deletes a meal at for the specified user date and meal",
    "exampleResponse": {}
  },
  "GET: /api/users/:user_id/lists": {
    "description": "responds with list objects (containing list_id and list_name) for the lists that the user has",
    "exampleResponse": {
      "lists": [{ "list_id": "1234", "list_name": "Shopping" }]
    }
  },
  "POST /api/users/:user_id/lists": {
    "description": "post a list to a user",
    "requestFormat": {
      "list_id": "1234",
      "list_name": "Shopping for Birthday Party"
    },
    "exampleResponse": {
      "list": {
        "list_id": "1234",
        "list_name": "Shopping for Birthday Party"
      }
    }
  },
  "DELETE /api/users/:user_id/lists/:list_id": {
    "description": "removes a list from a users profile",
    "exampleResponse": "n/a"
  },
  "GET /api/lists/:list_id": {
    "description": "responds with all the list data for the specified list",
    "exampleResponse": {
      "list": {
        "list_id": "123",
        "list_name": "Shopping",
        "people": ["Martha"],
        "list_items": ["cheese"]
      }
    }
  },
  "POST /api/lists": {
    "description": "post a new list to the database",
    "requestFormat": { "list_name": "Shopping", "people": ["Lian"] },
    "exampleResponse": {
      "list": {
        "list_id": "123",
        "list_name": "Shopping",
        "people": ["Lian"],
        "items": []
      }
    }
  },
  "POST /api/lists/:list_id/items": {
    "description": "posts and item the the list specified by the list_id parameter",
    "requestFormat": { "item": "Apples" },
    "exampleResponse": { "item": "Apples" }
  },
  "DELETE /api/lists/:list_id/items": {
    "description": "deletes all the items from the list specified by the parameter",
    "exampleResponse": "n/a"
  },
  "PATCH/api/lists/:list_id": {
    "description": "patch the name of a list specified by the parameter",
    "requestFormat": { "list_name": "New List" },
    "exampleResponse": { "list_name": "New List" }
  },
  "DELETE /api/lists/:list_id/items/:item_index": {
    "description": "deletes the item at the specified index on the list specified by the parameter",
    "exampleResponse": "n/a"
  },
  "POST /api/lists/:list_id/people": {
    "description": "post a new person to a people array of the specified list",
    "requestFormat": { "user_id": "123", "display_name": "Bob" },
    "exampleResponse": { "user": { "user_id": "123", "display_name": "Bob" } }
  },
  "GET /api/users/:user_id/recipies": {
    "description": "retrieve the recipie_name and recipie_id for all the recipies the specified user has",
    "exampleResponse": {
      "recipies": [{ "recipie_id": "123", "recipie_name": "Victoria Sponge" }]
    }
  },
  "POST /api/users/:user_id/recipies": {
    "description": "posts a recipie (recipie_id and recipie_name) to a users profile",
    "exampleResponse": {
      "recipie": { "recipie_id": "213", "recipie_name": "Cheese on toast" }
    }
  },
  "GET /api/recipies/:recipie_id": {
    "description": "responds with all the information for a specified recipie",
    "exampleResponse": {
      "recipie": {
        "recipie_id": "recipie-4",
        "recipie_name": "Chicken nuggets",
        "ingredients": [
          "250g flour",
          "100g bread crumbs",
          "1 chicken",
          "2 eggs"
        ],
        "method": "coat chicken in flour egg and bread crumbs and fry",
        "author": {
          "user_id": "user-3",
          "display_name": "HannaBremnerTattersall"
        },
        "image_url": "emaple.url"
      }
    }
  },
  "DELETE /api/recipies/:recipie_id": {
    "description": "deletes the recipie specified by the parameter",
    "exampleResponse": "n/a"
  },
  "POST /api/recipies": {
    "description": "post a new recipie to the database",
    "requestFormat": {
      "recipie_name": "choc cake",
      "ingredients": ["100g flour", "2 eggs", "100g butter"],
      "method": "Combine ingredients then bake",
      "author": { "user_id": "user-0", "display_name": "LianTattersall" },
      "image_url": "imgurl"
    },
    "exampleResponse": {
      "recipie": {
        "recipie_id": "123",
        "recipie_name": "choc cake",
        "ingredients": ["100g flour", "2 eggs", "100g butter"],
        "method": "Combine ingredients then bake",
        "author": { "user_id": "user-0", "display_name": "LianTattersall" },
        "image_url": "imgurl"
      }
    }
  },
  "PATCH /api/recipies/:recipie_id": {
    "description": "patch a recipie",
    "requestFormat": {
      "recipie_name": "choc cake",
      "ingredients": ["100g flour", "2 eggs", "100g butter"],
      "method": "Combine ingredients then bake",
      "author": { "user_id": "user-0", "display_name": "LianTattersall" },
      "image_url": "imgurl"
    },
    "exampleResponse": {
      "recipie": {
        "recipie_id": "123",
        "recipie_name": "choc cake",
        "ingredients": ["100g flour", "2 eggs", "100g butter"],
        "method": "Combine ingredients then bake",
        "author": { "user_id": "user-0", "display_name": "LianTattersall" },
        "image_url": "imgurl"
      }
    }
  }
}
