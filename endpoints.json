{
  "GET /api": { "description": "responds with a description of all endpoints" },
  "GET /api/users/:user_id/calendar/:date": {
    "description": "responds with an object containing meal info for that date to that user",
    "notes": ":date parameter is of the form 4-3-2002 for example. No leading zeros and is of the for date-month-year. Months are indexed at 0!! (applies for post and patch)",
    "exampleResponse": {
      "meals": {
        "breakfast": {
          "recipie_id": "123DE4",
          "recipie_name": "beans on toast",
          "my_recipie": false
        },
        "dinner": {
          "recipie_id": "12SHE4",
          "recipie_name": "Paneer Curry",
          "my_recipie": true
        }
      }
    }
  },
  "POST /api/users/:user_id/calendar/:date": {
    "description": "posts meals info to a date if the meal already exists it will overwrite what is already there",
    "requestFormat": {
      "breakfast": {
        "recipie_id": "12SHE4",
        "recipie_name": "Paneer Curry",
        "my_recipie": true
      }
    },
    "notes": "can have breakfast lunch dinner and extras as keys, all keys are optional",
    "exampleResponse": {
      "meals": {
        "breakfast": {
          "recipie_id": "12SHE4",
          "recipie_name": "Paneer Curry",
          "my_recipie": true
        }
      }
    }
  },
  "PATCH /api/users/:user_id/calendar/:date": {
    "description": "patches meals info to an existing date if the date already exists (i.e has other meals as well) it will not overwrite what is already there",
    "requestFormat": {
      "breakfast": {
        "recipie_id": "12SHE4",
        "recipie_name": "Paneer Curry",
        "my_recipie": true
      }
    },
    "notes": "can have breakfast lunch dinner and extras as keys, all keys are optional",
    "exampleResponse": {
      "meals": {
        "breakfast": {
          "recipie_id": "12SHE4",
          "recipie_name": "Paneer Curry",
          "my_recipie": true
        }
      }
    }
  },
  "POST /api/users": {
    "description": "posts a user to the database with an empty lists favourites and recipies arrays",
    "requestFormat": {
      "user_id": "123",
      "display_name": "Maggie",
      "avatar_url": "https:image.com"
    },
    "exampleResponse": {
      "user": {
        "user_id": "123",
        "display_name": "Maggie",
        "avatar_url": "https:image.com"
      }
    }
  },
  "POST /api/users/:user_id/calendar": {
    "description": "posts a user to the calendar database with no meals",
    "exampleResponse": { "user_id": "123GF" }
  },
  "DELETE /api/users/:user_id/calendar/:date/:meal": {
    "description": "deletes a meal at for the specified user date and meal",
    "exampleResponse": {}
  },
  "GET: /api/users/:user_id/lists": {
    "description": "responds with list objects (containing list_id and list_name) for the lists that the user has",
    "exampleResponse": {
      "lists": [{ "list_id": "1234", "list_name": "Shopping" }]
    }
  }
}
